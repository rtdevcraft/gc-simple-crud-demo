name: Build and Deploy to Cloud Run

on:
  push:
    branches: ['master']

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: gc-simple-crud-demo
  REGION: us-central1
  AR_REPOSITORY: simple-crud-demo
  AR_LOCATION: us-west4

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run Prisma Migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |

          echo "DATABASE_URL set: ${#DATABASE_URL}"
          echo "DATABASE_URL first 10 chars: ${DATABASE_URL::10}"


          export DATABASE_URL="${{ secrets.DATABASE_URL }}"


          DATABASE_URL="$DATABASE_URL" npx prisma migrate deploy

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Cloud SQL Proxy
        run: |

          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy


          ./cloud_sql_proxy -instances=my-project-1502729769937:us-central1:psqla=tcp:5432 &


          sleep 15


          nc -zv 127.0.0.1 5432

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker $AR_LOCATION-docker.pkg.dev

      - name: Build and Push to Artifact Registry
        run: |
          IMAGE_URI=$AR_LOCATION-docker.pkg.dev/$PROJECT_ID/$AR_REPOSITORY/$SERVICE_NAME:${{ github.sha }}

          docker build \
            --build-arg NEXT_PUBLIC_FIREBASE_API_KEY="${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" \
            --build-arg NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN="${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" \
            --build-arg NEXT_PUBLIC_FIREBASE_PROJECT_ID="${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" \
            --build-arg NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET="${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" \
            --build-arg NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID="${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" \
            --build-arg NEXT_PUBLIC_FIREBASE_APP_ID="${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" \
            -t $IMAGE_URI .

          docker push $IMAGE_URI

          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image ${{ env.IMAGE_URI }} \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --quiet
